# Package ######################################################################

[build-system]
requires = ["setuptools >= 61.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "metaworld"
description = "Collections of robotics environments geared towards benchmarking multi-task and meta reinforcement learning."
readme = "README.md"
requires-python = ">= 3.8"
authors = [{ name = "Farama Foundation", email = "contact@farama.org" }]
license = { text = "MIT License" }
keywords = ["Reinforcement Learning", "game", "RL", "AI", "gymnasium"]
classifiers = [
    "Development Status :: 4 - Beta",  # change to `5 - Production/Stable` when ready
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    'Intended Audience :: Science/Research',
    'Topic :: Scientific/Engineering :: Artificial Intelligence',
]
dependencies = [
    "gym>=0.15.4",
    "mujoco-py<2.2,>=2.0",
    "numpy>=1.18",
    "scipy>=1.4.1",
]
dynamic = ["version"]

[project.optional-dependencies]
# Update dependencies in `all` if any are added or removed
testing = [
    "ipdb",
    "memory_profiler",
    "pylint", # TODO: remove in favor of precommit?
    "pyquaternion==0.9.5",
    "pytest>=4.4.0",  # Required for pytest-xdist
    "pytest-xdist",
    "pytest-cov", #TODO: test this
    "pre-commit", #TODO: test this
]

[project.urls]
Homepage = "https://farama.org"
Repository = "https://github.com/Farama-Foundation/Metaworld"
Documentation = "https://meta-world.github.io/"
"Bug Report" = "https://github.com/Farama-Foundation/Metaworld/issues"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["metaworld", "metaworld.*"]

# Linters and Test tools #######################################################

[tool.black]
safe = true

[tool.isort]
atomic = true
profile = "black"
src_paths = ["metaworld", "tests"]

[tool.pyright]
# add any files/directories with type declaration to include
include = [
    "metaworld/",
]
strict = [
]
verboseOutput = true
typeCheckingMode = "basic"
reportMissingImports = false
# TODO: fix these
reportUnboundVariable = false
reportOptionalMemberAccess = false
reportGeneralTypeIssues = false
reportOptionalSubscript = false

[tool.pytest.ini_options]
norecursedirs = [
    "metaworld"
]
